# - name: update-machine
#   become: yes
#   yum:
#     name: '*'
#     state: latest
- name: enable powertools repositary
  become: yes
  yum:
    state: latest
    enablerepo: powertools
- name: install munge dependencies
  become: yes
  yum:
    name:
      - openssl
      - openssl-libs
      - openssl-devel
      - gcc
      - git
      - pkgconf
      - make
      - munge
      - rng-tools
      - munge-devel
      - perl
      - python3
      - firewalld
    state: latest
- name: install slurm dependencies
  become: yes
  yum:
    name:
      - pam-devel
      - numactl
      - numactl-devel
      - hwloc
      - lua
      - readline-devel
      - ncurses-devel
      - libibmad
      - libibumad
    state: latest
- name: check randomness
  shell: rngd -r /dev/urandom
- name: generate munge key
  shell: /usr/sbin/create-munge-key -r
- name: store munge key
  shell: cat /etc/munge/munge.key
  register: munge-key
- name: set owner to munge user directories
  become: yes
  ansible.builtin.file:
    path: 
      - /etc/munge
      - /var/log/munge
      - /var/lib/munge
    owner: munge
    recurse: yes
    mode: '0700'
- name: set owner to munge user of /run/munge
  become: yes
  ansible.builtin.file:
    path: 
      - /run/munge
    owner: munge
    recurse: yes
    mode: '0755'
- name: set acces of munge key
  become: yes
  ansible.builtin.file:
    path: /etc/munge/munge.key
    mode: '0400'
- name: stop munge service
  become: yes
  ansible.builtin.systemd:
    name: munge
    state: stopped
- name: enable munge service
  become: yes
  ansible.builtin.systemd:
    name: munge
    enabled: yes
    masked: no
- name: stop munge service
  become: yes
  ansible.builtin.systemd:
    name: munge
    state: started

- name: enable firewalld service
  become: yes
  ansible.builtin.systemd:
    name: firewalld
    enabled: yes
    masked: no
- name: stop firewalld service
  become: yes
  ansible.builtin.systemd:
    name: firewalld
    state: started
- name: get slurm cloned repo path
  command: echo "{{slurm-git-repo}}" | sed -r 's/(.*\/)([A-Za-z0-9\_\-]+).git/ \2 /'
  register: slurm-git-repo-path
- name: clone slurm
  ansible.builtin.git:
    repo: {{slurm-git-repo}}
    dest: {{slurm-install-folder + "/slurm"}}
    version: {{slurm-version}}
- name: configure installation
  command:
    cmd: ./configure
    chdir: {{ slurm-install-folder +  slurm-git-repo-path}}
    argv:
      - --with-munge
- name: compile slurm
  make:
    chdir: "{{ slurm-install-folder +  slurm-git-repo-path}}"
    target: all
- name: check slurm compilation
  make:
    chdir: "{{ slurm-install-folder +  slurm-git-repo-path}}"
    target: check
- name: install compiled slurm
  become: yes
  make:
    chdir: "{{ slurm-install-folder +  slurm-git-repo-path}}"
    target: install
- name: configure ssh key for installation
  become: yes
  cmd:
    - echo -e "{{ ssh-compute-priv }}" | tee /home/{{ansible_user}}/{{compute-key-name}}
- name: retreive cpu count of node
  command:
    cmd:
      - "ssh -l {{ansible_user}} -i /home/{{ansible_user}}/{{compute-key-name}} {{ slurm-slaves[0].name] }} nproc"
    register: compute-cpus-count
- name: create /etc/slurm directory if not exists
  become: yes
  ansible.builtin.file:
    path: /etc/slurm
    state: directory
    mode: '0755'
- name: copy slurm.conf
  become: yes
  copy:
    src: "{{ slurm-openstack-files-path }}/slurm.conf"
    dest: /etc/slurm.conf
- name: generate slurm configuration for nodes
  command:
    cmd: 
      - 'python3 gen-slurm-conf-nodes.py "{{slurm-master.hosts[0].name}}" "{{slurm-master.hosts[0].ip}}" "{{slurm-slaves.hosts | map(attribute=name)}}" "{{slurm-slaves.hosts | map(attribute=ip)}}" {{compute-cpus-count}}'
    register: slurm-conf-nodes
- name: add node configurations to slurm.comf
  become: yes
  command:
    cmd:
      - 'echo -e "{{slurm-conf-nodes}}" | tee -a /etc/slurm.conf'
- name: add user slurm
  become: yes
  ansible.builtin.user:
    name: slurm
- name: create /var/spool/slurmctld and /var/spool/slurmd directory if not exists
  become: yes
  ansible.builtin.file:
    path: 
      - /var/spool/slurmctld
      #- /var/spool/slurmd
    state: directory
    mode: '0755'
- name: set owner to slurm user of /var/spool/slurmctld and /var/spool/slurmd
  become: yes
  ansible.builtin.file:
    path: 
      - /var/spool/slurmctld
      #- /var/spool/slurmd
    owner: slurm
    recurse: yes
- name: touch and set owner to slurm user directories of /var/log/slurm_jobacct.log /var/log/slurm_jobcomp.log /var/log/slurmctld.log and /var/log/slurmd.log
  become: yes
  ansible.builtin.file:
    state: touch
    path: 
      - /var/log/slurm_jobacct.log
      - /var/log/slurm_jobcomp.log
      - /var/log/slurmctld.log
      #- /var/log/slurmd.log
    owner: slurm
- name: setup firewalld ports slurmctld
  become: yes
  ansible.posix.firewalld:
    port: 6817/tcp
    permanent: yes
    zone: public
    state: enabled
- name: setup firewalld ports slurmctld
  become: yes
  ansible.posix.firewalld:
    port: 6817/udp
    permanent: yes
    zone: public
    state: enabled
#- name: setup firewalld ports slurmd
#  become: yes
#  ansible.posix.firewalld:
#    port: 6818/tcp
#    permanent: yes
#    zone: public
#    state: enabled
#- name: setup firewalld ports slurmd
#  become: yes
#  ansible.posix.firewalld:
#    port: 6818/udp
#    permanent: yes
#    zone: public
#    state: enabled
- name: setup firewalld ports
  become: yes
  ansible.posix.firewalld:
    port: 7321/tcp
    permanent: yes
    zone: public
    state: enabled
- name: setup firewalld ports
  become: yes
  ansible.posix.firewalld:
    port: 7321/udp
    permanent: yes
    zone: public
    state: enabled
- name: reload service firewalld
  become: yes
  ansible.posix.systemd:
    name: firewalld
    state: reloaded
- name: copy slurmctld.service
  become: yes
  ansible.builtin.copy:
    src: {{slurm-openstack-files-path + "/slurmctld.service"}}
    dest: /etc/systemd/system/slurmctld.service
    owner: root
    mode: '0755'
- name: copy slurmctld service script
  become: yes
  ansible.builtin.copy:
    src: {{slurm-openstack-files-path + "/slurmctld.sh"}}
    dest: /usr/bin/slurmctld.sh
    owner: root
    mode: '0700'
- name: reset SElinux attributes
  become: yes
  command: restorecon /usr/bin/slurmctld.sh
  
- name: enable slurmctld service
  become: yes
  ansible.builtin.systemd:
    name: slurmctld
    enabled: yes
    masked: no
- name: start slurmctld service
  become: yes
  ansible.builtin.systemd:
    name: slurmctld
    state: started