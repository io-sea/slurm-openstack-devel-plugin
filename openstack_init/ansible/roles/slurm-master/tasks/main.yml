# - name: update-machine
#   become: True
#   yum:
#     name: '*'
#     state: latest
- name: install munge dependencies
  become: True
  yum:
    name:
      - openssl
      - openssl-libs
      - openssl-devel
      - munge
      - rng-tools
      - munge-devel
      - perl
      - python3
      #- firewalld
    state: latest
    enablerepo: powertools
- name: install slurm dependencies
  become: True
  yum:
    name:
      - pkgconf
      - make
      - git
      - gcc
      - pam-devel
      - numactl
      - numactl-devel
      - hwloc
      - lua
      - readline-devel
      - ncurses-devel
      - libibmad
      - libibumad
    state: latest
- name: check randomness
  shell: rngd -r /dev/urandom
- name: generate munge key
  become: True
  shell: /usr/sbin/create-munge-key -r
- name: store munge key
  shell: cat /etc/munge/munge.key
  register: munge_key
- name: set owner to munge user directories
  become: True
  ansible.builtin.file:
    path: 
      - /etc/munge
      - /var/log/munge
      - /var/lib/munge
    owner: munge
    recurse: True
    mode: '0700'
- name: set owner to munge user of /run/munge
  become: True
  ansible.builtin.file:
    path: /run/munge
    owner: munge
    recurse: True
    mode: '0755'
- name: set access for munge key
  become: True
  ansible.builtin.file:
    path: /etc/munge/munge.key
    mode: '0400'
- name: stop munge service
  become: True
  ansible.builtin.systemd:
    name: munge
    state: stopped
- name: enable munge service
  become: True
  ansible.builtin.systemd:
    name: munge
    enabled: True
    masked: no
- name: start munge service
  become: True
  ansible.builtin.systemd:
    name: munge
    state: started

# - name: enable firewalld service
#   become: True
#   ansible.builtin.systemd:
#     name: firewalld
#     enabled: True
#     masked: no
# - name: start firewalld service
#   become: True
#   ansible.builtin.systemd:
#     name: firewalld
#     state: started
# - name: setup firewalld ports slurmctld
#   become: True
#   ansible.builtin.firewalld:
#     port: "{{ item }}"
#     permanent: True
#     zone: public
#     state: enabled
#   loop:
#     - 6817/tcp
#     - 6817/udp
#     - 7321/tcp
#     - 7321/udp
# - name: reload service firewalld
#   become: True
#   ansible.builtin.systemd:
#     name: firewalld
#     state: reloaded
- name: clone slurm
  ansible.builtin.git:
    repo: "{{ slurm_git_repo }}"
    dest: "{{ slurm_install_folder }}/{{ slurm_git_repo_path }}"
    version: "{{ slurm_tag }}"
- name: configure installation
  command:
    cmd: ./configure --with-munge
    chdir: "{{ slurm_install_folder }}/{{ slurm_git_repo_path }}"
- name: compile slurm
  community.general.make:
    chdir: "{{ slurm_install_folder }}/{{ slurm_git_repo_path }}"
    target: all
- name: check slurm compilation
  community.general.make:
    chdir: "{{ slurm_install_folder }}/{{ slurm_git_repo_path }}"
    target: check
- name: install compiled slurm
  become: True
  community.general.make:
    chdir: "{{ slurm_install_folder }}/{{ slurm_git_repo_path }}"
    target: install
- name: create /etc/slurm directory if not exists
  become: True
  ansible.builtin.file:
    path: /etc/slurm
    state: directory
    mode: '0755'
- name: add user slurm
  become: True
  ansible.builtin.user:
    name: slurm
- name: prepare slurm.conf
  become: True
  ansible.builtin.template:
    src: "{{ slurm_openstack_templates_path }}/slurm.conf.j2"
    dest: /etc/slurm/slurm.conf
    owner: slurm
    mode: '0755'
- name: store slurm generated configuration
  shell: cat /etc/slurm/slurm.conf
  register: slurm_configuration
- name: copy slurmctld.service
  become: True
  ansible.builtin.copy:
    src: "{{ slurm_openstack_files_path }}/cgroup.conf"
    dest: /etc/slurm/cgroup.conf
    owner: slurm
    mode: '0755'
- name: create /var/spool/slurmctld directory if not exists
  become: True
  ansible.builtin.file:
    path: /var/spool/slurmctld
    state: directory
    mode: '0755'
    owner: slurm
    recurse: True
- name: touch and set owner to slurm user directories of /var/log/slurm_jobacct.log /var/log/slurm_jobcomp.log and /var/log/slurmctld.log
  become: True
  ansible.builtin.file:
    state: touch
    path: "{{ item }}"
    owner: slurm
  loop:
    - /var/log/slurm_jobacct.log
    - /var/log/slurm_jobcomp.log
    - /var/log/slurmctld.log
- name: copy slurmctld.service
  become: True
  ansible.builtin.copy:
    src: "{{ slurm_openstack_services_path }}/slurmctld.service"
    dest: /etc/systemd/system/slurmctld.service
    owner: root
    mode: '0664'
- name: copy slurmctld service script
  become: True
  ansible.builtin.copy:
    src: "{{ slurm_openstack_services_path }}/slurmctld.sh"
    dest: /usr/bin/slurmctld.sh
    owner: root
    mode: '0700'
- name: reset SElinux attributes
  become: True
  command: restorecon /usr/bin/slurmctld.sh
- name: enable slurmctld service
  become: True
  ansible.builtin.systemd:
    name: slurmctld
    enabled: True
    masked: no
- name: start slurmctld service
  become: True
  ansible.builtin.systemd:
    name: slurmctld
    state: started

- name: create /etc/environment if not exists 
  become: True
  ansible.builtin.file:
    state: touch
    path: /etc/environment
    mode: '0644'
- name: set global env variable SLURM_CONF
  become: True
  blockinfile:
    path: /etc/environment
    marker: "#SLURM CONF LOCATION - auto generated"
    insertbefore: EOF
    block: |
      SLURM_CONF=/etc/slurm/slurm.conf

## shared variables
- name: "Add shared variables to dummy host"
  add_host:
    name:   "ANSIBLE_SHARED_HOLDER_MASTER"
    munge_key:  "{{ munge_key.stdout }}"
    slurm_configuration:   "{{ slurm_configuration.stdout }}"